<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
">
	<!-- fast json convert 配置 -->
	<bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html; charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="fastJsonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	<!-- enables @Autowired annotation -->
	<context:annotation-config />
	<!-- scan packages and autowire beans automatically (no need to declare beans manually) -->
    <context:component-scan base-package="com.mealnotes" />
    <mvc:annotation-driven />
    <mvc:resources mapping="/css/**" location="/assets/css/"/>
    <mvc:resources mapping="/img/**" location="/assets/img/"/>
    <mvc:resources mapping="/js/**" location="/assets/js/"/>
    <!-- 解析Freemarker视图 -->
    <bean name="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="requestContextAttribute" value="rc"/>
        <property name="suffix" value=".ftl"/>
        <property name="viewClass" value="com.mealnotes.app.view.AppFreeMarkerView"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="exposeSpringMacroHelpers" value="true"></property>
        <property name="exposeRequestAttributes" value="true"></property>
        <property name="exposeSessionAttributes" value="true"></property>
    </bean>

    <!-- 配置Freemarker -->
    <bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">

        <property name="templateLoaderPath">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="freemarkerSettings"><!-- 如果模板不经常更新，此属性设置更新延迟时间 -->
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="number_format">#</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="url_escaping_charset">utf-8</prop>
                <prop key="defaultEncoding">utf-8</prop>
            </props>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="extends" value-ref="extendsDirective"></entry>
                <entry key="override" value-ref="overrideDirective"></entry>
                <entry key="block" value-ref="blockDirective"></entry>
                <entry key="super" value-ref="superDirective"></entry>
            </map>
        </property>
    </bean>
    <bean id="blockDirective" class="cn.org.rapid_framework.freemarker.directive.BlockDirective"/>
    <bean id="extendsDirective" class="cn.org.rapid_framework.freemarker.directive.ExtendsDirective"/>
    <bean id="overrideDirective" class="cn.org.rapid_framework.freemarker.directive.OverrideDirective"/>
    <bean id="superDirective" class="cn.org.rapid_framework.freemarker.directive.SuperDirective"/>
    <!-- 定义c3p0数据源 -->
	<context:property-placeholder location="classpath:datasource.properties"/>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${connection.driver_class}"></property>
		<property name="jdbcUrl" value="${connection.url}"></property>
		<property name="user" value="${connection.username}"></property>
		<property name="password" value="${connection.password}"></property>
		<property name="maxPoolSize" value="${connection.max_pool_size}"></property>
		<property name="minPoolSize" value="${connection.min_pool_size}"></property>
		<property name="initialPoolSize" value="${connection.initial_pool_size}"></property>
		<property name="maxIdleTime" value="${connection.max_idle_time}"></property>
	</bean>
	<!-- hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描映射文件，实体类 -->
		<property name="packagesToScan">
			<list>
				<value>com.mealnotes.*.beans</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>  
       			<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>  

        		<!-- 配置二级缓存 -->  
        		<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>  
        		<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>  
        		<!-- Hibernate4 这里和Hibernate3不一样 要特别注意！！！-->  
        		<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop> 
			</props>
		</property>
	</bean>
	<tx:annotation-driven />
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
</beans>